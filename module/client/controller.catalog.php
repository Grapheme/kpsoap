<?class catalog_client extends TClientController {	public function catalog($code_name){		$this->content = $this->load_module(preg_replace('/^([a-z]+).*/i','$1',$code_name));		//echo isset($_POST['axah'])?$_POST['axah']:'';        if (action == 'getbasket') {			if (isset($_SESSION['basket'])) {				if (count($_SESSION['basket'])>0) {									echo '{"empty":""}';					exit;				}				echo '{"empty":""}';				exit;			}			echo '{"empty":""}';			exit;		} else		if (action == 'basketadd') {			if (isset($_POST['id']) &&				$_POST['count']) {				if (!isset($_SESSION['basket']))					$_SESSION['basket'] = array();								if (!isset($_SESSION['basket'][$_POST['id']]))					$_SESSION['basket'][$_POST['id']] = 0;								$_SESSION['basket'][$_POST['id']]+=$_POST['count'];				echo 'add success';			} else				echo 'error';			exit;		} else		if (action == 'basketdel') {			unset($_SESSION['basket'][$_POST['id']]);			echo 'remove success';			exit;		}		if (action == 'getsimilarity') {			$similarity = $this->core->sql->query("				SELECT 					`dat_catalog_list`.`id`,					`dat_catalog_list`.`article`,					`dat_catalog_list`.`title`,					`dat_catalog_list`.`photo`,					`dat_catalog_list`.`price`,					`dat_catalog_list`.`price_sell`, 					`dat_catalog_type`.`alias` as `group`				FROM					`dat_catalog_list`						LEFT JOIN `dat_catalog_type` ON (`dat_catalog_list`.`type_id` = `dat_catalog_type`.`id`)				WHERE (					`index_similarity` = '{$_POST['index_similarity']}'					AND `dat_catalog_list`.`id` <> '{$_POST['id']}'				)				ORDER BY					rand()				LIMIT 					0, 5			");			for ($ri=0; $ri<$similarity->num_rows; $ri++) {				if (empty($similarity->cell[$ri]['photo']))					$similarity->cell[$ri]['photo'] = 'nophoto-small.png';									if (!preg_match('#^http:#', $similarity->cell[$ri]['photo'])) {					$similarity->cell[$ri]['photo'] = preg_replace('#;.*#','',$similarity->cell[$ri]['photo']);					$similarity->cell[$ri]['photo'] = "http://{$_SERVER['SERVER_NAME']}/img-dbimage/catalog/{$similarity->cell[$ri]['group']}/".preg_replace('#\.([a-z]{3}$)#','-$1',$similarity->cell[$ri]['photo'])."-122x122-89.jpg";				}				$similarity->cell[$ri]['psize'] = func::imageGetSizeRestric($similarity->cell[$ri]['photo'], 122, 122);				$similarity->cell[$ri]['title_eng'] = preg_replace('/(\(.+\))/i','',$similarity->cell[$ri]['title']);			}					$this->content['content'] = array('similarity' => $similarity->cell);			$this->content['page_tpl'] = 'module.catalog_similarity.tpl';            return $this->content;		} else		if (action == 'getproduce') {			if (isset($_POST['id'])) {				$_POST['id'] = (int)$_POST['id'];				$info = $this->core->sql->query("					SELECT 						`dat_catalog_list`.`article`,						`dat_catalog_list`.`title`,						`dat_catalog_list`.`photo`,						`dat_catalog_list`.`count`,						`dat_catalog_list`.`price`,						`dat_catalog_list`.`price_sell`,						`dat_catalog_type`.`alias` as `group`					FROM 						`dat_catalog_list` LEFT JOIN `dat_catalog_type` ON (`dat_catalog_list`.`type_id` = `dat_catalog_type`.`id`)					WHERE (						`dat_catalog_list`.`id` = '{$_POST['id']}'					)				");				func::sqlTestError($this->core->sql);				if ($info->num_rows >0) {					if (empty($info->cell[0]['photo']))						$info->cell[0]['photo'] = 'nophoto-small.png';											if (!preg_match('#^http:#', $info->cell[0]['photo'])) {						$photo = preg_replace('#;.*#','',$info->cell[0]['photo']);						$photo = "http://{$_SERVER['SERVER_NAME']}/img-dbimage/catalog/{$info->cell[0]['group']}/".preg_replace('#\.([a-z]{3}$)#i','-$1',$photo)."-40c40-89.jpg";						$size = array(40, 40);					} else						$size = func::imageGetSizeRestric($info->cell[0]['photo'], 40, 40);					$price = $info->cell[0]['price_sell']>0?$info->cell[0]['price_sell']:$info->cell[0]['price'];					echo '<responce>'.							"<title>".(trim(preg_replace("#(\([^\)]*\))#",'',$info->cell[0]['title'])))."</title>".							"<group>{$info->cell[0]['group']}</group>".							"<article>{$info->cell[0]['article']}</article>".							"<price>{$price}</price>".							"<count>{$info->cell[0]['count']}</count>".							"<photo>{$photo}</photo>".							"<width>{$size[0]}</width>".							"<height>{$size[1]}</height>".						 '</responce>';				} else					echo '<responce>error</responce>';			} else {				echo '<responce>error</responce>';			}			return $this->content;		}		$groups = $this->core->sql->query("SELECT `id`, `alias`, `name`, `count` FROM `dat_catalog_type` WHERE (`count` > 0)");		func::sqlTestError($this->core->sql);		$pos_on_page = empty($this->page)?48:12;		$header = 'Страница отсутствует';		$id = 0;				$submenu = array();		for ($i=0; $i<$groups->num_rows; $i++) {			if ($this->page == $groups->cell[$i]['alias']) {				$header = $groups->cell[$i]['name'];				$id = $groups->cell[$i]['id'];				$alias = $groups->cell[$i]['alias'];				$count = $groups->cell[$i]['count'];			}			array_push($submenu, array(				"id" => $groups->cell[$i]['id'],				"alias" => $groups->cell[$i]['alias'],				"title" => $groups->cell[$i]['name'])			);		}		/*if (!empty($this->page) && !isset($alias)) {			$this->content = $this->error404($code_name);			return $this->content;		}*/				$subpage = false;		$isset_subpage = $this->core->sql->select(			'dat_catalog_subtype',			'$0.*',			"$0.title LIKE '{$this->subpage}'"		);		func::sqlTestError($this->core->sql);		if ($isset_subpage->num_rows > 0)			$this->subpage = $subpage = $isset_subpage->cell[0];				if (empty($this->subpage) || $subpage) {			if (!preg_match("/{$_SERVER['SERVER_NAME']}\/catalog\//i", $_SERVER['HTTP_REFERER'])) {				unset($_SESSION["filter_{$this->page}_pricescroll"]); // Сброс при входе в раздел				unset($_SESSION["filter_{$this->page}_selection"]); // Сброс при входе в раздел			}						$pg = pg;			$_POST['pg'] = pg;						$filter = '';			$filter_damp = array();			foreach($_POST as $key => $val) {				$_SESSION["filter_{$this->page}_{$key}"] = $val;			}			foreach($_SESSION as $key => $val) {				if (preg_match("#^filter_{$this->page}_.*#",$key)) {					$_POST[str_replace("filter_{$this->page}_",'',$key)] = $val;										if ($key == "filter_{$this->page}_checkcontrol") {						$checkgroup = preg_split('#[;]#',$val);						$val = array();						foreach($checkgroup as $k => $v) {							$tmp = preg_split('#[-]#',$v,2);							$name = $tmp[0];							if (count($tmp)>1) {								if (!isset($val[$name]))									$val[$name] = $tmp[1];								else									$val[$name] .= "-".$tmp[1];							}						}					}										if ($key == "filter_{$this->page}_pricescroll") {						$val = preg_split('#[\-]#',$val);					}										if ($key == "filter_{$this->page}_selection") {						$selection = json_decode($val);						foreach($selection as $s_key => $s_val) {							$selection[$s_val->name] = func::jsonData_decode($s_val->value);						}						$val = $selection;					}					$filter_damp[str_replace("filter_{$this->page}_",'',$key)] = $val;				} else					continue;			}			if (isset($_POST['pg']))				$pg = $_POST['pg'];							foreach($_POST as $p_key => $p_val) {				if (preg_match('/^pricescroll$/', $p_key) && !preg_match('/NaN/i', $p_val)) {					$price_value = preg_split('#[-]#',$p_val);					$filter .= " AND (`price` >= '{$price_value[0]}' AND `price` <= '{$price_value[1]}')";				} else				if (preg_match('/^checkcontrol/', $p_key)) {					$checkgroup = preg_split('#[;]#',$p_val);					foreach($checkgroup as $key => $val) {						$res = preg_split('#[-]#',$val);						foreach($res as $rkey => $rval) {							$rval = trim($rval,'[]');							if ($rkey == 1) {								$filter.=" AND (`dat_catalog_type{$id}_field`.`{$res[0]}` LIKE '%{$rval}%'";							} else							if ($rkey >1)								$filter.=" OR `dat_catalog_type{$id}_field`.`{$res[0]}` LIKE '%{$rval}%'";						}						if ($rkey >0)							$filter.=")";					}				} else				if (preg_match('/^selection/', $p_key)) {					$selection = json_decode($p_val);					foreach($selection as $val) {						$field = $val->name;						$value = func::jsonData_decode($val->value);						if (is_int($value)?($value>0):!empty($value))							$filter .= " AND `{$field}` = '{$value}'";					}				}			}			$this->content['filter'] = $filter_damp;			$first = (empty($filter) && empty($this->page))?'ORDER BY rand() LIMIT 0,12':'';			$filter.=($subpage)?" AND `dat_catalog_list`.`subtype` = '{$subpage['id']}'":'';			$catalog_count = $this->core->sql->query("				SELECT					`dat_catalog_list`.`id`				FROM					`dat_catalog_list`".					($id>0?" LEFT JOIN `dat_catalog_type{$id}_field` ON (`dat_catalog_type{$id}_field`.`id_rec` = `dat_catalog_list`.`id`)":'').				"WHERE (".					($id>0?"`dat_catalog_list`.`type_id` = '{$id}' AND ":'').					"`dat_catalog_list`.`count`>0					{$filter}				)				{$first}			");			$catalog_count = $catalog_count->num_rows; //$count;						$price_restrict = $this->core->sql->query("SELECT MIN(`price`) as `min`, MAX(`price`) as `max` FROM `dat_catalog_list` WHERE (`count`>0)");			$price_restrict->cell[0]['min'] = $price_restrict->cell[0]['min']>100?$price_restrict->cell[0]['min']-100:0;			$price_restrict->cell[0]['max'] += 100;			/*$price_step = array();			for($i=0; $i<4; $i++) {				array_push($price_step, round(floor(($price_restrict->cell[0]['max'] - $price_restrict->cell[0]['min'])/3)*$i+$price_restrict->cell[0]['min'], -2));			}*/            /*             * 14.07.2014             * Сейчас, когда товар закончился, мы ставим цифру ноль и он исчезает с магазина.             * Необходимо реализовать следующее — когда у нас стоит ноль в карточки товара,             * то товар по-прежнему отображается в магазине и клиент видет надпись «Товар в производстве»             * см.строку 298             * `dat_catalog_list`.`count`>0 заменил на TRUE в результате sql = ... WHERE ... AND TRUE AND ...             */			if ($catalog_count> 0) {				$pg = $pg>floor($catalog_count/$pos_on_page)?floor($catalog_count/$pos_on_page):$pg;				$first = empty($first)?"					ORDER BY						`dat_catalog_list`.`priority` DESC,						`dat_catalog_list`.`rating` DESC,						`dat_catalog_list`.`last_update`					LIMIT					 ".($pg*$pos_on_page).",{$pos_on_page}":$first;				$produce = $this->core->sql->query("					SELECT						`dat_catalog_list`.*,						`dat_catalog_type`.`alias` as `group`".						($id>0?", `dat_catalog_type{$id}_field`.*":'').					"FROM						`dat_catalog_list`						LEFT JOIN `dat_catalog_type` ON (`dat_catalog_type`.`id` = `dat_catalog_list`.`type_id`)".						($id>0?" LEFT JOIN `dat_catalog_type{$id}_field` ON (`dat_catalog_type{$id}_field`.`id_rec` = `dat_catalog_list`.`id`)":'').					"WHERE (".						($id>0?"`dat_catalog_list`.`type_id` = '{$id}' AND ":'').                        " TRUE						{$filter}					)					{$first}				");				func::sqlTestError($this->core->sql);				for ($i=0; $i<$produce->num_rows; $i++) {					if (empty($produce->cell[$i]['photo']))						$produce->cell[$i]['photo'] = 'nophoto-small.png';											if (!preg_match('#^http:#', $produce->cell[$i]['photo'])) {						$produce->cell[$i]['photo'] = preg_replace('#;.*#','',$produce->cell[$i]['photo']);						$produce->cell[$i]['photo'] = "http://{$_SERVER['SERVER_NAME']}/img-dbimage/catalog/{$produce->cell[$i]['group']}/".preg_replace('#\.([a-z]{3}$)#i','-$1',$produce->cell[$i]['photo'])."-181c121-89.jpg";					}					$produce->cell[$i]['psize'] = func::imageGetSizeRestric($produce->cell[$i]['photo'], 181, 121);					$produce->cell[$i]['title_eng'] = preg_replace('/(\(.+\))/i','',$produce->cell[$i]['title']);				}				$produce = $produce->cell;			} else				$produce = array();						$type_id = $this->core->sql->query("SELECT * FROM `dat_catalog_type` WHERE `count`>0");			func::sqlTestError($this->core->sql);						$subtype = $this->core->sql->query("SELECT `id`, `type_id`, `title` FROM `dat_catalog_subtype`");			func::sqlTestError($this->core->sql);						$subtype_menu = $this->core->sql->select(				array(					'dat_catalog_subtype',					'$L.dat_catalog_type:$0.type_id=$1.id'				),				array(					'$0.id',					'$0.alias',					'$0.title'				),				"$1.alias='{$this->page}'"			);			func::sqlTestError($this->core->sql);						if (isset($this->subpage['description'])) {				preg_match_all('/\[([TKD])\]([^\[]+)\[\/[TKD]\]/',$this->subpage['description'],$mached);				while(array_pop($mached[0])) {					$type = array_pop($mached[1]);					$val = array_pop($mached[2]);					if ($type == 'T')						$this->content['headers']['title'] = $val;					else					if ($type == 'K')						$this->content['headers']['keywords'] = $val;					else					if ($type == 'D')						$this->content['headers']['description'] = $val;				}				$subinfo = preg_replace('/\[([TKD])\]([^\[]+)\[\/[TKD]\]/','',$this->subpage['description']);			}						$this->content['content'] = array(				'header' => $header,				'produce_list' => $produce,				'pages' => ceil($catalog_count/$pos_on_page),				'subtype' => $subtype_menu->cell,				'subsel' => ($subpage)?$subpage['id']:-1,				'subinfo' => isset($subinfo)?$subinfo:'',				'page' => $pg,				'hash' => isset($_POST['hash'])?$_POST['hash']:0,				'filter_data' => array(					'type_id' => $type_id->cell,					'subtype' => $subtype->cell				)			);						if (action == 'filterupdate') {				$_SESSION["filter_pg"] = pg;				$this->content['page_tpl'] = 'module.catalog.ahax.tpl';					return $this->content;			} else				$this->content['page_tpl'] = 'module.catalog.tpl';							$this->content['subclass'] = "catalog";					}		/*if (!empty($this->page) && empty($this->subpage)) {			header(func::url_delget("location: http://{$_SERVER['SERVER_NAME']}/{$this->core->SITE_SECTION_NAME}/#select[type_id={$this->page};subtype=Любая]"));			exit;		} else		if (!empty($this->page) && empty($this->subpage)) {			$produce = $this->core->sql->query("				SELECT 					`dat_catalog_list`.*,					`dat_catalog_type{$id}_field`.*,					`dat_catalog_subtype`.`alias` as `subtype_alias`,					`dat_catalog_subtype`.`title` as `subtype_name`,					`dat_catalog_subtype`.`description` as `subtype_description`,					`dat_catalog_type`.`alias` as `group_alias`,					`dat_catalog_type`.`name_1` as `group_name`				FROM					`dat_catalog_list`						LEFT JOIN `dat_catalog_subtype` ON (`dat_catalog_list`.`subtype` = `dat_catalog_subtype`.`id`)						LEFT JOIN `dat_catalog_type` ON (`dat_catalog_list`.`type_id` = `dat_catalog_type`.`id`),					`dat_catalog_type{$id}_field`				WHERE (					`dat_catalog_type{$id}_field`.`id_rec` = `dat_catalog_list`.`id` AND					`dat_catalog_type`.`alias` = '{$this->page}' AND 					`dat_catalog_list`.`count`>0				)				LIMIT 0,1			");						print_r($produce);		} else*/		if (!empty($this->page) && !empty($this->subpage) && !$subpage) {            /*            ## Original SQL            $sql  = "				SELECT 					`dat_catalog_list`.*,					`dat_catalog_type{$id}_field`.*,					`dat_catalog_subtype`.`alias` as `subtype_alias`,					`dat_catalog_subtype`.`title` as `subtype_name`,					`dat_catalog_subtype`.`description` as `subtype_description`,					`dat_catalog_type`.`alias` as `group_alias`,					`dat_catalog_type`.`name_1` as `group_name`				FROM					`dat_catalog_list`						LEFT JOIN `dat_catalog_subtype` ON (`dat_catalog_list`.`subtype` = `dat_catalog_subtype`.`id`)						LEFT JOIN `dat_catalog_type` ON (`dat_catalog_list`.`type_id` = `dat_catalog_type`.`id`),					`dat_catalog_type{$id}_field`				WHERE (					`dat_catalog_type{$id}_field`.`id_rec` = `dat_catalog_list`.`id` AND					`dat_catalog_list`.`article` = '{$this->subpage}' AND 					`dat_catalog_list`.`count`>0				)				LIMIT 0,1			";            #*/            $sql  = "				SELECT 					`dat_catalog_list`.*,                    " .                     ($id>0?"`dat_catalog_type{$id}_field`.*,":'') . "					`dat_catalog_subtype`.`alias` as `subtype_alias`,					`dat_catalog_subtype`.`title` as `subtype_name`,					`dat_catalog_subtype`.`description` as `subtype_description`,					`dat_catalog_type`.`alias` as `group_alias`,					`dat_catalog_type`.`name_1` as `group_name`				FROM					`dat_catalog_list`						LEFT JOIN `dat_catalog_subtype` ON (`dat_catalog_list`.`subtype` = `dat_catalog_subtype`.`id`)						LEFT JOIN `dat_catalog_type` ON (`dat_catalog_list`.`type_id` = `dat_catalog_type`.`id`)                        " . ($id>0?", dat_catalog_type{$id}_field":'') . "				WHERE (                    " . ($id>0?"`dat_catalog_type{$id}_field`.`id_rec` = `dat_catalog_list`.`id` AND":'') . "					`dat_catalog_list`.`article` = '{$this->subpage}'				)				LIMIT 0,1			";            #echo "<pre>" . print_r($sql, 1) . "</pre>";			$produce = $this->core->sql->query($sql);            #echo "<pre>" . print_r($produce, 1) . "</pre>";			func::sqlTestError($this->core->sql);						$subtype = $this->core->sql->query("SELECT `id`, `alias`, `title` FROM `dat_catalog_subtype` WHERE `type_id` = {$produce->cell[0]['type_id']}");			func::sqlTestError($this->core->sql);						$prod = 'none';			if ($produce->num_rows == 1) {				$header = preg_replace('/(\(.+\))/i','',$produce->cell[0]['title']);				if (empty($produce->cell[0]['photo'])) {					$produce->cell[0]['photo'] = 'nophoto-big.png';					$produce->cell[0]['nophoto'] = 'true';				}									$ploke = $produce->cell[0]['photo'] = preg_split('#[;]#', $produce->cell[0]['photo'], NULL, PREG_SPLIT_NO_EMPTY);				foreach($produce->cell[0]['photo'] as $key => $val) {					$produce->cell[0]['photo'][$key] = array(						"src" => "http://{$_SERVER['SERVER_NAME']}/img-dbimage/catalog/{$this->page}/".preg_replace('#\.([a-z]{3}$)#i','-$1',$val)."-438c284-95.jpg",						"size" => func::imageGetSizeRestric("data/dbimage/catalog/{$this->page}/{$val}", 438, 284)					);				}								$prod = $produce->cell[0];			}						if (!empty($produce->cell[0]['index_similarity'])) {				$similarity = $this->core->sql->query("					SELECT 						`dat_catalog_list`.`id`,						`dat_catalog_list`.`article`,						`dat_catalog_list`.`title`,						`dat_catalog_list`.`photo`,						`dat_catalog_list`.`price`,						`dat_catalog_list`.`price_sell`,						`dat_catalog_type`.`alias` as `group`,						if(UNIX_TIMESTAMP()-UNIX_TIMESTAMP(`dat_catalog_list`.`last_update`)<2592000, 1, 0) as `new`					FROM						`dat_catalog_list`							LEFT JOIN `dat_catalog_type` ON (`dat_catalog_list`.`type_id` = `dat_catalog_type`.`id`)					WHERE (						`index_similarity` = '{$produce->cell[0]['index_similarity']}'						AND `dat_catalog_list`.`id` <> '{$produce->cell[0]['id']}'					)					ORDER BY						rand()				");				$refrash = false;				if ($similarity->num_rows > 5) {					array_pop($similarity->cell);					$similarity->num_rows = count($similarity->cell);					$refrash = true;				}				for ($ri=0; $ri<$similarity->num_rows; $ri++) {					if (empty($similarity->cell[$ri]['photo']))						$similarity->cell[$ri]['photo'] = 'nophoto-small.png';											$photo = preg_replace('#;.*#','',$similarity->cell[$ri]['photo']);					$similarity->cell[$ri]['photo'] = "http://{$_SERVER['SERVER_NAME']}/img-dbimage/catalog/{$similarity->cell[$ri]['group']}/".preg_replace('#\.([a-z]{3}$)#i','-$1',$photo)."-181c121-89.jpg";										$similarity->cell[$ri]['psize'] = func::imageGetSizeRestric($similarity->cell[$ri]['photo'], 181, 121);					$similarity->cell[$ri]['title_eng'] = preg_replace('/(\(.+\))/i','',$similarity->cell[$ri]['title']);				}			}						$this->content['headers']['title'] = "{$header} - ".ucfirst($produce->cell[0]['subtype']>0?"{$produce->cell[0]['subtype_name']} ":"")."{$produce->cell[0]['article']}";			$this->content['headers']['description'] = preg_replace(array('/ ["\']/','/["\']( |\.)/'),array(" «","»$1"), "{$header}. ".(!empty($produce->cell[0]['about_product'])?trim(strip_tags($produce->cell[0]['about_product']),". "):NULL)."".($produce->cell[0]['subtype']>0?". Коллекция: {$produce->cell[0]['subtype_name']}, ":". ").(!empty($produce->cell[0]['color'])?"Цвет: {$produce->cell[0]['color']}":NULL));			$this->content['photo_like'] = "http://{$_SERVER['SERVER_NAME']}/img-dbimage/catalog/{$this->page}/".preg_replace('#\.([a-z]{3}$)#i','-$1',$ploke[0])."-200c180-95.jpg";			$this->content['content'] = array(				'header' => $header,				'produce' => $prod,				'subtype' => $subtype->cell,				'similarity' => isset($similarity)?$similarity->cell:null,				'similarity_refrash' => isset($refrash)?$refrash:false,				'pg' => isset($_SESSION["filter_pg"])?$_SESSION["filter_pg"]:0			);			unset($_SESSION["filter_pg"]);			$this->content['subclass'] = "catalog card";		}		$this->content['submenu'] = $submenu;		$this->content['submenu_tpl'] = "submenu.catalog.tpl";				return $this->content;	}}?>