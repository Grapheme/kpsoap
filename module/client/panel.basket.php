<?class panel_basket extends TPanelController {	public function basket() {		if (isset($_SESSION['basket'])) {			if (count($_SESSION['basket'])>0) {				$where = '';				foreach($_SESSION['basket'] as $key => $value) {					$where.="`dat_catalog_list`.`id`='$key' OR ";				}				$where = "(".substr($where,0,-4).")";				$basket = $this->core->sql->query("SELECT 														`dat_catalog_list`.`id`,														`dat_catalog_list`.`article`,														`dat_catalog_list`.`title`, 														`dat_catalog_list`.`price`, 														`dat_catalog_list`.`price_sell`, 														`dat_catalog_list`.`photo`,														`dat_catalog_list`.`count`,														`dat_catalog_type`.`alias` as `group`													FROM 														`dat_catalog_list`															LEFT JOIN `dat_catalog_type` ON (`dat_catalog_list`.`type_id` = `dat_catalog_type`.`id`)													WHERE (														{$where}													)");				func::sqlTestError($this->core->sql);				$count = 0;				$price = 0;				for ($i=0; $i<$basket->num_rows; $i++) {					$basket->cell[$i]['price'] = $basket->cell[$i]['price_sell']>0?$basket->cell[$i]['price_sell']:$basket->cell[$i]['price'];					$basket->cell[$i]['title_eng'] = preg_replace('/(\(.+\))/i','',$basket->cell[$i]['title']);					$basket->cell[$i]['max'] = $basket->cell[$i]['count'];					$basket->cell[$i]['count'] = $_SESSION['basket'][$basket->cell[$i]['id']];					if (!preg_match('#^http:#', $basket->cell[$i]['photo'])) {						$basket->cell[$i]['photo'] = preg_replace('#;.*#','',$basket->cell[$i]['photo']);						$basket->cell[$i]['photo'] = "http://{$_SERVER['SERVER_NAME']}/img-dbimage/catalog/{$basket->cell[$i]['group']}/".preg_replace('#\.([a-z]{3}$)#i','-$1',$basket->cell[$i]['photo'])."-40c40-85.jpg";						$basket->cell[$i]['p_url_size'] = array(40, 40);					} else						$basket->cell[$i]['p_url_size'] = func::imageGetSizeRestric($basket->cell[$i]['photo'], 40, 40);					$count+=$basket->cell[$i]['count'];					$price+=$basket->cell[$i]['count']*$basket->cell[$i]['price'];				}				return array("list" => $basket->cell,							 "count" => $count,							 "price" => $price,							 "sell_val" => $this->sell_val($price),							 "sell_price" => $this->sell_price($price));			} else {				return array();			} 		} else {			return array();		}	}		private function sell_val($price) {		if ($price > 5000000)			return 20;		else		if ($price > 1500000)			return 15;		else		if ($price > 1000000)			return 10;		else		if ($price > 500000)			return 5;		return 0;	}		private function sell_price($price) {		return floor(floor($price-($price*($this->sell_val($price)/100)))/10)*10;	}}?>